{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/frontend/src/websocket/Provider.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Event {\n  constructor(type, payload) {\n    this.type = void 0;\n    this.payload = void 0;\n    this.type = type;\n    this.payload = payload;\n  }\n}\nexport const WebsocketContext = /*#__PURE__*/createContext({\n  ready: false,\n  value: null,\n  send: () => {}\n});\nexport const WebsocketProvider = ({\n  children,\n  isLogged\n}) => {\n  _s();\n  const [isReady, setIsReady] = useState(false);\n  const [val, setVal] = useState(null);\n  const ws = useRef(null);\n  useEffect(() => {\n    if (ws.current != null) {\n      ws.current.close();\n    }\n    console.log(isLogged);\n    const socket = new WebSocket(\"ws://localhost:8080/ws\");\n    socket.onopen = () => setIsReady(true);\n    socket.onclose = () => setIsReady(false);\n    socket.onmessage = event => setVal(event.data);\n    ws.current = socket;\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [isLogged]);\n  const send = data => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(data);\n    }\n  };\n  const contextValue = {\n    ready: isReady,\n    value: val,\n    send: send\n  };\n  return /*#__PURE__*/_jsxDEV(WebsocketContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(WebsocketProvider, \"oBLzd0VWYHo4QYtJ5KRcuZs+fjg=\");\n_c = WebsocketProvider;\nvar _c;\n$RefreshReg$(_c, \"WebsocketProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useRef","useState","jsxDEV","_jsxDEV","Event","constructor","type","payload","WebsocketContext","ready","value","send","WebsocketProvider","children","isLogged","_s","isReady","setIsReady","val","setVal","ws","current","close","console","log","socket","WebSocket","onopen","onclose","onmessage","event","data","readyState","OPEN","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/frontend/src/websocket/Provider.tsx"],"sourcesContent":["import React, { createContext, useEffect, useRef, useState } from 'react';\n\nexport class Event {\n    type: string\n    payload: any\n    constructor(type: string, payload: any) {\n        this.type = type\n        this.payload = payload\n    }\n}\n\nexport interface WebsocketContextProps {\n    ready: boolean;\n    value: any;\n    send: ((data: any) => void);\n}\n\nexport const WebsocketContext = createContext<WebsocketContextProps>({\n    ready: false,\n    value: null,\n    send: () => { },\n});\n\ninterface WebsocketProviderProps {\n    children: React.ReactNode;\n    isLogged: boolean\n}\n\nexport const WebsocketProvider: React.FC<WebsocketProviderProps> = ({ children, isLogged }) => {\n    const [isReady, setIsReady] = useState(false);\n    const [val, setVal] = useState<any>(null);\n    const ws = useRef<WebSocket | null>(null);\n\n    useEffect(() => {\n        if (ws.current != null) {\n            ws.current.close()\n        }\n        console.log(isLogged)\n        const socket = new WebSocket(\"ws://localhost:8080/ws\");\n\n        socket.onopen = () => setIsReady(true);\n        socket.onclose = () => setIsReady(false);\n        socket.onmessage = (event) => setVal(event.data);\n\n        ws.current = socket;\n\n        return () => {\n            if (ws.current) {\n                ws.current.close();\n            }\n        };\n    }, [isLogged]);\n\n    const send = (data: any) => {\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n            ws.current.send(data);\n        }\n    };\n\n    const contextValue: WebsocketContextProps = {\n        ready: isReady,\n        value: val,\n        send: send,\n    };\n\n    return (\n        <WebsocketContext.Provider value={contextValue}>\n            {children}\n        </WebsocketContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,OAAO,MAAMC,KAAK,CAAC;EAGfC,WAAWA,CAACC,IAAY,EAAEC,OAAY,EAAE;IAAA,KAFxCD,IAAI;IAAA,KACJC,OAAO;IAEH,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;AACJ;AAQA,OAAO,MAAMC,gBAAgB,gBAAGV,aAAa,CAAwB;EACjEW,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAEA,CAAA,KAAM,CAAE;AAClB,CAAC,CAAC;AAOF,OAAO,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,GAAG,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAAM,IAAI,CAAC;EACzC,MAAMmB,EAAE,GAAGpB,MAAM,CAAmB,IAAI,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACZ,IAAIqB,EAAE,CAACC,OAAO,IAAI,IAAI,EAAE;MACpBD,EAAE,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrB,MAAMW,MAAM,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAEtDD,MAAM,CAACE,MAAM,GAAG,MAAMV,UAAU,CAAC,IAAI,CAAC;IACtCQ,MAAM,CAACG,OAAO,GAAG,MAAMX,UAAU,CAAC,KAAK,CAAC;IACxCQ,MAAM,CAACI,SAAS,GAAIC,KAAK,IAAKX,MAAM,CAACW,KAAK,CAACC,IAAI,CAAC;IAEhDX,EAAE,CAACC,OAAO,GAAGI,MAAM;IAEnB,OAAO,MAAM;MACT,IAAIL,EAAE,CAACC,OAAO,EAAE;QACZD,EAAE,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;MACtB;IACJ,CAAC;EACL,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMH,IAAI,GAAIoB,IAAS,IAAK;IACxB,IAAIX,EAAE,CAACC,OAAO,IAAID,EAAE,CAACC,OAAO,CAACW,UAAU,KAAKN,SAAS,CAACO,IAAI,EAAE;MACxDb,EAAE,CAACC,OAAO,CAACV,IAAI,CAACoB,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,MAAMG,YAAmC,GAAG;IACxCzB,KAAK,EAAEO,OAAO;IACdN,KAAK,EAAEQ,GAAG;IACVP,IAAI,EAAEA;EACV,CAAC;EAED,oBACIR,OAAA,CAACK,gBAAgB,CAAC2B,QAAQ;IAACzB,KAAK,EAAEwB,YAAa;IAAArB,QAAA,EAC1CA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAEpC,CAAC;AAACxB,EAAA,CA1CWH,iBAAmD;AAAA4B,EAAA,GAAnD5B,iBAAmD;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}