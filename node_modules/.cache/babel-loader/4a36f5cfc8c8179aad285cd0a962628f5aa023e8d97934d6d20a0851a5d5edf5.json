{"ast":null,"code":"class Event {\n  constructor(type, payload) {\n    this.type = void 0;\n    this.payload = void 0;\n    this.type = type;\n    this.payload = payload;\n  }\n}\nexport const connectWS = conn => {\n  const socket = new WebSocket('ws://localhost:8080/ws');\n  console.log('Attempting Websocket Connection');\n  socket.onopen = () => {\n    console.log('Successfully Connected');\n  };\n  socket.onclose = event => {\n    console.log('socket Closed Connection: ', event);\n  };\n  socket.onmessage = e => {\n    const eventData = JSON.parse(e.data);\n    routeEvent(conn, eventData);\n    socket.onerror = error => {\n      console.log('socket Error: ', error);\n    };\n    conn.current = socket;\n    return () => {\n      if (conn.current && conn.current.readyState === WebSocket.OPEN) {\n        conn.current.close();\n      }\n      conn.current = null; // Reset the WebSocket reference when closed\n    };\n  };\n\n  function routeEvent(conn, data) {\n    var _conn$current;\n    if (data.type === undefined) {\n      alert('no such event type');\n    }\n    switch (data.type) {\n      case 'New_Message':\n        (_conn$current = conn.current) === null || _conn$current === void 0 ? void 0 : _conn$current.send(data);\n        break;\n      case 'New_Notification':\n        setNewNotification(true);\n        fetchData('notification', setNotificationData);\n        break;\n      default:\n        alert('Unsupported event');\n    }\n  }\n};","map":{"version":3,"names":["Event","constructor","type","payload","connectWS","conn","socket","WebSocket","console","log","onopen","onclose","event","onmessage","e","eventData","JSON","parse","data","routeEvent","onerror","error","current","readyState","OPEN","close","_conn$current","undefined","alert","send","setNewNotification","fetchData","setNotificationData"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/api/wsRouter.ts"],"sourcesContent":["class Event {\n    type: string\n    payload: any\n    constructor(type: string, payload: any) {\n        this.type = type\n        this.payload = payload\n    }\n}\n\nexport const connectWS = (conn: React.MutableRefObject<WebSocket | null>) => {\n    const socket = new WebSocket('ws://localhost:8080/ws')\n    console.log('Attempting Websocket Connection')\n\n    socket.onopen = () => {\n        console.log('Successfully Connected')\n    }\n\n    socket.onclose = (event) => {\n        console.log('socket Closed Connection: ', event)\n    }\n\n    socket.onmessage = (e) => {\n        const eventData = JSON.parse(e.data)\n        routeEvent(conn, eventData)\n\n        socket.onerror = (error) => {\n            console.log('socket Error: ', error)\n        }\n        conn.current = socket\n        return () => {\n            if (conn.current && conn.current.readyState === WebSocket.OPEN) {\n                conn.current.close();\n            }\n            conn.current = null; // Reset the WebSocket reference when closed\n        };\n    }\n\n    function routeEvent(conn: React.MutableRefObject<WebSocket | null>, data: any): any {\n        if (data.type === undefined) {\n            alert('no such event type')\n        }\n        switch (data.type) {\n            case 'New_Message':\n                conn.current?.send(data)\n                break\n            case 'New_Notification':\n                setNewNotification(true)\n                fetchData('notification', setNotificationData)\n                break\n            default:\n                alert('Unsupported event')\n        }\n    }\n}"],"mappings":"AAAA,MAAMA,KAAK,CAAC;EAGRC,WAAWA,CAACC,IAAY,EAAEC,OAAY,EAAE;IAAA,KAFxCD,IAAI;IAAA,KACJC,OAAO;IAEH,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;AACJ;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAA8C,IAAK;EACzE,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;EACtDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAE9CH,MAAM,CAACI,MAAM,GAAG,MAAM;IAClBF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACzC,CAAC;EAEDH,MAAM,CAACK,OAAO,GAAIC,KAAK,IAAK;IACxBJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEG,KAAK,CAAC;EACpD,CAAC;EAEDN,MAAM,CAACO,SAAS,GAAIC,CAAC,IAAK;IACtB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,IAAI,CAAC;IACpCC,UAAU,CAACd,IAAI,EAAEU,SAAS,CAAC;IAE3BT,MAAM,CAACc,OAAO,GAAIC,KAAK,IAAK;MACxBb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,KAAK,CAAC;IACxC,CAAC;IACDhB,IAAI,CAACiB,OAAO,GAAGhB,MAAM;IACrB,OAAO,MAAM;MACT,IAAID,IAAI,CAACiB,OAAO,IAAIjB,IAAI,CAACiB,OAAO,CAACC,UAAU,KAAKhB,SAAS,CAACiB,IAAI,EAAE;QAC5DnB,IAAI,CAACiB,OAAO,CAACG,KAAK,CAAC,CAAC;MACxB;MACApB,IAAI,CAACiB,OAAO,GAAG,IAAI,CAAC,CAAC;IACzB,CAAC;EACL,CAAC;;EAED,SAASH,UAAUA,CAACd,IAA8C,EAAEa,IAAS,EAAO;IAAA,IAAAQ,aAAA;IAChF,IAAIR,IAAI,CAAChB,IAAI,KAAKyB,SAAS,EAAE;MACzBC,KAAK,CAAC,oBAAoB,CAAC;IAC/B;IACA,QAAQV,IAAI,CAAChB,IAAI;MACb,KAAK,aAAa;QACd,CAAAwB,aAAA,GAAArB,IAAI,CAACiB,OAAO,cAAAI,aAAA,uBAAZA,aAAA,CAAcG,IAAI,CAACX,IAAI,CAAC;QACxB;MACJ,KAAK,kBAAkB;QACnBY,kBAAkB,CAAC,IAAI,CAAC;QACxBC,SAAS,CAAC,cAAc,EAAEC,mBAAmB,CAAC;QAC9C;MACJ;QACIJ,KAAK,CAAC,mBAAmB,CAAC;IAClC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}