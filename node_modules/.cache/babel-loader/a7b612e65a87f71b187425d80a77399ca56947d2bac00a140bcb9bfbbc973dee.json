{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateGroup/CreateGroup.tsx\",\n  _s = $RefreshSig$();\nimport { HandleImageSend } from \"../../utils/ImageControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport './CreateGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateGroup() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const imageRef = useRef(null);\n  const [imageUrl, setUrl] = useState('');\n  const [groupData, setGroupData] = useState({\n    groupName: '',\n    GroupAbout: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    if (type === 'file') {\n      var _e$target$files;\n      const file = HandleImageSend((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n      if (typeof file === 'string') {\n        setError(file);\n        return;\n      }\n      setUrl(URL.createObjectURL(file));\n      setGroupData(prevData => ({\n        ...prevData,\n        image: file\n      }));\n    } else {\n      setGroupData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    if (groupData.groupName === '') {\n      setError('Please enter group name');\n      return;\n    } else if (groupData.GroupAbout === '') {\n      setError('Please enter group description');\n      return;\n    }\n    if (groupData.groupName.length > 25) setError('Too long name. Max 25 chars');\n    const {\n      image,\n      ...formDataWithoutAvatar\n    } = groupData;\n    await fetch('http://localhost:8080/api/groups/create', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\",\n      body: JSON.stringify(formDataWithoutAvatar)\n    }).then(async response => {\n      if (!response.ok) {\n        const message = await response.text();\n        setError(message);\n        return;\n      }\n      const id = await response.json();\n      if (image) {\n        const data = new FormData(); //FormData is for avatar to send this as File \n        data.append('image', image);\n        await fetch(`http://localhost:8080/api/image/group/${id}`, {\n          method: \"POST\",\n          credentials: \"include\",\n          body: data\n        }).then(async response => {\n          console.log(response);\n          if (!response.ok) {\n            const message = await response.text();\n            setError(message);\n            return;\n          }\n        });\n      }\n      navigate(`/groups/${id}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-group-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"event-title event-inputs\",\n      placeholder: \"TITLE\",\n      name: \"groupName\",\n      value: groupData.groupName,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"content-text-area\",\n      placeholder: \"DESCRIPTION\",\n      name: \"GroupAbout\",\n      value: groupData.GroupAbout,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-image\",\n      onDrop: handleChange,\n      onClick: () => {\n        var _imageRef$current;\n        (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n      },\n      children: [groupData.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"post-img\",\n        alt: \"\",\n        src: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop image or click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        hidden: true,\n        type: \"file\",\n        className: \"post-image-input\",\n        onDrop: handleChange,\n        onChange: handleChange,\n        ref: imageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-create__error group-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-button group-create-btn\",\n      onClick: handleSubmit,\n      children: \"CREATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateGroup, \"XyG1vcSDvkJRNQe6k8toxuWzjJg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateGroup;\nexport default CreateGroup;\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["HandleImageSend","useNavigate","useState","useRef","jsxDEV","_jsxDEV","CreateGroup","_s","navigate","error","setError","imageRef","imageUrl","setUrl","groupData","setGroupData","groupName","GroupAbout","handleChange","e","name","value","type","target","_e$target$files","file","files","URL","createObjectURL","prevData","image","handleSubmit","length","formDataWithoutAvatar","fetch","method","headers","credentials","body","JSON","stringify","then","response","ok","message","text","id","json","data","FormData","append","console","log","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onClick","_imageRef$current","current","click","alt","src","hidden","ref","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateGroup/CreateGroup.tsx"],"sourcesContent":["import { HandleImageSend } from \"../../utils/ImageControl\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useState, useRef } from \"react\"\nimport './CreateGroup.css'\n\nfunction CreateGroup() {\n    const navigate = useNavigate()\n\n    const [error, setError] = useState('')\n    const imageRef = useRef<HTMLInputElement | null>(null)\n    const [imageUrl, setUrl] = useState('')\n    const [groupData, setGroupData] = useState<{\n        groupName: string;\n        GroupAbout: string;\n        image?: File;\n    }>({\n        groupName: '',\n        GroupAbout: ''\n    })\n\n    const handleChange = (e: any) => {\n        const { name, value, type } = e.target\n        if (type === 'file') {\n            const file = HandleImageSend(e.target.files?.[0])\n            if (typeof file === 'string') {\n                setError(file)\n                return\n            }\n            setUrl(URL.createObjectURL(file))\n            setGroupData((prevData) => ({\n                ...prevData,\n                image: file,\n            }))\n        } else {\n            setGroupData((prevData) => ({\n                ...prevData,\n                [name]: value,\n            }))\n        }\n    }\n\n    const handleSubmit = async (e: any) => {\n        if (groupData.groupName === '') {\n            setError('Please enter group name')\n            return\n        } else if (groupData.GroupAbout === '') {\n            setError('Please enter group description')\n            return\n        }\n        if (groupData.groupName.length > 25) setError('Too long name. Max 25 chars')\n        const { image, ...formDataWithoutAvatar } = groupData\n        await fetch('http://localhost:8080/api/groups/create', {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            credentials: \"include\",\n            body: JSON.stringify(formDataWithoutAvatar)\n        }).then(async (response) => {\n            if (!response.ok) {\n                const message = await response.text()\n                setError(message)\n                return\n            }\n            const id = await response.json()\n            if (image) {\n                const data = new FormData() //FormData is for avatar to send this as File \n                data.append('image', image)\n                await fetch(`http://localhost:8080/api/image/group/${id}`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                    body: data\n                }).then(async (response) => {\n                    console.log(response)\n                    if (!response.ok) {\n                        const message = await response.text()\n                        setError(message)\n                        return\n                    }\n                })\n            }\n            navigate(`/groups/${id}`)\n        })\n    }\n\n    return (\n        <div className=\"create-group-main\">\n            <input\n                className=\"event-title event-inputs\"\n                placeholder=\"TITLE\"\n                name=\"groupName\"\n                value={groupData.groupName}\n                onChange={handleChange} />\n            <textarea className=\"content-text-area\"\n                placeholder=\"DESCRIPTION\"\n                name=\"GroupAbout\"\n                value={groupData.GroupAbout}\n                onChange={handleChange} />\n            <div className=\"add-image\"\n                onDrop={handleChange}\n                onClick={() => { imageRef.current?.click() }}>\n                {groupData.image ?\n                    <img className=\"post-img\" alt=\"\" src={imageUrl} /> : <p>Drop image or click here</p>\n                }\n                <input hidden\n                    type=\"file\"\n                    className=\"post-image-input\"\n                    onDrop={handleChange}\n                    onChange={handleChange}\n                    ref={imageRef} />\n            </div>\n            <p className='post-create__error group-error' >{error}</p>\n            <button className=\"create-button group-create-btn\" onClick={handleSubmit}>CREATE</button>\n        </div>\n    )\n}\n\nexport default CreateGroup"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAGR,MAAM,CAA0B,IAAI,CAAC;EACtD,MAAM,CAACS,QAAQ,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAIvC;IACCc,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAM,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGH,CAAC,CAACI,MAAM;IACtC,IAAID,IAAI,KAAK,MAAM,EAAE;MAAA,IAAAE,eAAA;MACjB,MAAMC,IAAI,GAAGzB,eAAe,EAAAwB,eAAA,GAACL,CAAC,CAACI,MAAM,CAACG,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC,CAAC;MACjD,IAAI,OAAOC,IAAI,KAAK,QAAQ,EAAE;QAC1Bf,QAAQ,CAACe,IAAI,CAAC;QACd;MACJ;MACAZ,MAAM,CAACc,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAAC;MACjCV,YAAY,CAAEc,QAAQ,KAAM;QACxB,GAAGA,QAAQ;QACXC,KAAK,EAAEL;MACX,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHV,YAAY,CAAEc,QAAQ,KAAM;QACxB,GAAGA,QAAQ;QACX,CAACT,IAAI,GAAGC;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMU,YAAY,GAAG,MAAOZ,CAAM,IAAK;IACnC,IAAIL,SAAS,CAACE,SAAS,KAAK,EAAE,EAAE;MAC5BN,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACJ,CAAC,MAAM,IAAII,SAAS,CAACG,UAAU,KAAK,EAAE,EAAE;MACpCP,QAAQ,CAAC,gCAAgC,CAAC;MAC1C;IACJ;IACA,IAAII,SAAS,CAACE,SAAS,CAACgB,MAAM,GAAG,EAAE,EAAEtB,QAAQ,CAAC,6BAA6B,CAAC;IAC5E,MAAM;MAAEoB,KAAK;MAAE,GAAGG;IAAsB,CAAC,GAAGnB,SAAS;IACrD,MAAMoB,KAAK,CAAC,yCAAyC,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,qBAAqB;IAC9C,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACrCnC,QAAQ,CAACkC,OAAO,CAAC;QACjB;MACJ;MACA,MAAME,EAAE,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAChC,IAAIjB,KAAK,EAAE;QACP,MAAMkB,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC,EAAC;QAC5BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEpB,KAAK,CAAC;QAC3B,MAAMI,KAAK,CAAE,yCAAwCY,EAAG,EAAC,EAAE;UACvDX,MAAM,EAAE,MAAM;UACdE,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAEU;QACV,CAAC,CAAC,CAACP,IAAI,CAAC,MAAOC,QAAQ,IAAK;UACxBS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;UACrB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YACd,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;YACrCnC,QAAQ,CAACkC,OAAO,CAAC;YACjB;UACJ;QACJ,CAAC,CAAC;MACN;MACApC,QAAQ,CAAE,WAAUsC,EAAG,EAAC,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC;EAED,oBACIzC,OAAA;IAAKgD,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9BjD,OAAA;MACIgD,SAAS,EAAC,0BAA0B;MACpCE,WAAW,EAAC,OAAO;MACnBnC,IAAI,EAAC,WAAW;MAChBC,KAAK,EAAEP,SAAS,CAACE,SAAU;MAC3BwC,QAAQ,EAAEtC;IAAa;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BvD,OAAA;MAAUgD,SAAS,EAAC,mBAAmB;MACnCE,WAAW,EAAC,aAAa;MACzBnC,IAAI,EAAC,YAAY;MACjBC,KAAK,EAAEP,SAAS,CAACG,UAAW;MAC5BuC,QAAQ,EAAEtC;IAAa;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BvD,OAAA;MAAKgD,SAAS,EAAC,WAAW;MACtBQ,MAAM,EAAE3C,YAAa;MACrB4C,OAAO,EAAEA,CAAA,KAAM;QAAA,IAAAC,iBAAA;QAAE,CAAAA,iBAAA,GAAApD,QAAQ,CAACqD,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;MAAC,CAAE;MAAAX,QAAA,GAC5CxC,SAAS,CAACgB,KAAK,gBACZzB,OAAA;QAAKgD,SAAS,EAAC,UAAU;QAACa,GAAG,EAAC,EAAE;QAACC,GAAG,EAAEvD;MAAS;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGvD,OAAA;QAAAiD,QAAA,EAAG;MAAwB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAExFvD,OAAA;QAAO+D,MAAM;QACT9C,IAAI,EAAC,MAAM;QACX+B,SAAS,EAAC,kBAAkB;QAC5BQ,MAAM,EAAE3C,YAAa;QACrBsC,QAAQ,EAAEtC,YAAa;QACvBmD,GAAG,EAAE1D;MAAS;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACNvD,OAAA;MAAGgD,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAG7C;IAAK;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DvD,OAAA;MAAQgD,SAAS,EAAC,gCAAgC;MAACS,OAAO,EAAE/B,YAAa;MAAAuB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEd;AAACrD,EAAA,CA5GQD,WAAW;EAAA,QACCL,WAAW;AAAA;AAAAqE,EAAA,GADvBhE,WAAW;AA8GpB,eAAeA,WAAW;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}