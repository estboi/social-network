{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateEvent/CreateEvent.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport './CreateEvent.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateEvent() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const {\n    groupId\n  } = useParams();\n  const groupIdAsString = groupId || '';\n  const Id = parseInt(groupIdAsString, 10);\n  const [eventData, setEventData] = useState({\n    title: '',\n    description: '',\n    date: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEventData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    console.log(eventData);\n    if (eventData.title === '') {\n      setError('Please enter event name');\n      return;\n    } else if (eventData.description === '') {\n      setError('Please enter event description');\n      return;\n    } else if (eventData.date === '') {\n      setError('Please enter event date');\n      return;\n    }\n    await fetch(`http://localhost:8080/api/event/create/${Id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventData)\n    }).then(async response => {\n      if (!response.ok) {\n        const message = await response.text();\n        setError(message);\n        return;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-create-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"event-title\",\n        placeholder: \"Title\",\n        name: \"title\",\n        value: eventData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"event-description\",\n        placeholder: \"description\",\n        name: \"description\",\n        value: eventData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"event-date\",\n        type: \"date\",\n        name: \"date\",\n        value: eventData.date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleSubmit,\n        children: \"CREATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateEvent, \"afvC90Hrr+lzheooxnU2F3ssSNA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CreateEvent;\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["useNavigate","useParams","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateEvent","_s","navigate","error","setError","groupId","groupIdAsString","Id","parseInt","eventData","setEventData","title","description","date","handleChange","e","name","value","target","prevData","handleSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","message","text","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateEvent/CreateEvent.tsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\"\nimport Header from \"../../components/header/header\"\nimport Navbar from \"../../components/navbar/navbar\"\nimport './CreateEvent.css'\nimport { useState } from \"react\"\n\nfunction CreateEvent() {\n    const navigate = useNavigate()\n    const [error, setError] = useState('')\n\n    const { groupId } = useParams()\n    const groupIdAsString = groupId || '';\n    const Id = parseInt(groupIdAsString, 10)\n\n    const [eventData, setEventData] = useState({\n        title: '',\n        description: '',\n        date: '',\n    })\n\n    const handleChange = (e: any) => {\n        const { name, value } = e.target\n        setEventData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }))\n    }\n\n    const handleSubmit = async (e: any) => {\n        console.log(eventData)\n        if (eventData.title === '') {\n            setError('Please enter event name')\n            return\n        } else if (eventData.description === '') {\n            setError('Please enter event description')\n            return\n        } else if (eventData.date === '') {\n            setError('Please enter event date')\n            return\n        }\n\n        await fetch(`http://localhost:8080/api/event/create/${Id}`, {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(eventData)\n        }).then(async (response) => {\n            if (!response.ok) {\n                const message = await response.text()\n                setError(message)\n                return\n            }\n        })\n    }\n\n    return (\n        <>\n            <div className=\"event-create-main\">\n                <textarea\n                    className=\"event-title\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    value={eventData.title}\n                    onChange={handleChange} />\n                <textarea\n                    className=\"event-description\"\n                    placeholder=\"description\"\n                    name=\"description\"\n                    value={eventData.description}\n                    onChange={handleChange} />\n                <input\n                    className=\"event-date\"\n                    type=\"date\"\n                    name=\"date\"\n                    value={eventData.date}\n                    onChange={handleChange} />\n                <button className=\"back-button\" onClick={handleSubmit}>CREATE</button>\n            </div>\n        </>\n    )\n}\n\nexport default CreateEvent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}