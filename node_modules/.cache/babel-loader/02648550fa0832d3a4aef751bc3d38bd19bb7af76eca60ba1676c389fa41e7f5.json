{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/GroupPage/GroupPage.tsx\",\n  _s = $RefreshSig$();\nimport GroupBar from \"./GroupBar\";\nimport './GroupPage.css';\nimport { useParams } from \"react-router-dom\";\nimport List from \"../../components/list/list\";\nimport { useState, useEffect } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GroupPage() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState('');\n  const {\n    groupId\n  } = useParams();\n  if (groupId === undefined) {\n    setError('Group doesn\\'t exist');\n  }\n  const groupString = groupId || '';\n  const Id = parseInt(groupString, 10);\n  console.log(Id);\n  useEffect(() => {\n    fetchData(`api/posts/group/${Id}`, setData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-page__error\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"error\",\n        children: \"YOU AREN'T MEMBER OF THIS GROUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-page\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        signal: 'posts',\n        className: 'posts',\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GroupBar, {\n        id: Id,\n        error: setError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(GroupPage, \"9WvkP8tu538w000pxC4odzWEbc0=\", false, function () {\n  return [useParams];\n});\n_c = GroupPage;\nexport default GroupPage;\nvar _c;\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"names":["GroupBar","useParams","List","useState","useEffect","fetchData","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupPage","_s","data","setData","error","setError","groupId","undefined","groupString","Id","parseInt","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","signal","id","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/GroupPage/GroupPage.tsx"],"sourcesContent":["import GroupBar from \"./GroupBar\"\nimport './GroupPage.css'\nimport { useParams } from \"react-router-dom\"\nimport List from \"../../components/list/list\"\nimport { useState, useEffect } from \"react\"\nimport fetchData from \"../../utils/fetchData\"\n\nfunction GroupPage() {\n    const [data, setData] = useState([])\n    const [error, setError] = useState('')\n\n    const { groupId } = useParams()\n    if (groupId === undefined) {\n        setError('Group doesn\\'t exist')\n    }\n    const groupString = groupId || ''\n    const Id = parseInt(groupString, 10)\n    console.log(Id)\n\n    useEffect(() => {\n        fetchData(`api/posts/group/${Id}`, setData)\n    }, [])\n\n    return (\n        <>\n            {error ?\n                <div className=\"group-page__error\">\n                    <h1 className=\"error\">YOU AREN'T MEMBER OF THIS GROUP</h1>\n                </div>\n                :\n                <div className=\"group-page\">\n                    <List signal={'posts'} className={'posts'} data={data} />\n                    <GroupBar id={Id} error={setError} />\n                </div>\n            }\n        </>\n\n    )\n}\n\nexport default GroupPage\n\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAO,iBAAiB;AACxB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAEa;EAAQ,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC/B,IAAIe,OAAO,KAAKC,SAAS,EAAE;IACvBF,QAAQ,CAAC,sBAAsB,CAAC;EACpC;EACA,MAAMG,WAAW,GAAGF,OAAO,IAAI,EAAE;EACjC,MAAMG,EAAE,GAAGC,QAAQ,CAACF,WAAW,EAAE,EAAE,CAAC;EACpCG,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EAEff,SAAS,CAAC,MAAM;IACZC,SAAS,CAAE,mBAAkBc,EAAG,EAAC,EAAEN,OAAO,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACKT,KAAK,gBACFP,OAAA;MAAKiB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,eAC9BhB,OAAA;QAAIiB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,gBAENrB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBhB,OAAA,CAACL,IAAI;QAAC2B,MAAM,EAAE,OAAQ;QAACL,SAAS,EAAE,OAAQ;QAACZ,IAAI,EAAEA;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDrB,OAAA,CAACP,QAAQ;QAAC8B,EAAE,EAAEX,EAAG;QAACL,KAAK,EAAEC;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC,gBAEZ,CAAC;AAGX;AAACjB,EAAA,CA/BQD,SAAS;EAAA,QAIMT,SAAS;AAAA;AAAA8B,EAAA,GAJxBrB,SAAS;AAiClB,eAAeA,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}