{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/components/list/components/groupChip/groupChip.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./groupChip.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ImageGet } from \"../../../../utils/ImageControl\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChip = ({\n  data\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [avatar, setAvatar] = useState('');\n  const [optionButtons, setButtons] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  const notMember = id => {\n    const requestHandle = e => {\n      fetch(`http://localhost:8080/api/groups/request/${id}`, {\n        method: \"POST\",\n        credentials: \"include\"\n      }).then(resp => {\n        if (resp.status === 202) {\n          setButtons(isPending());\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"group__buttons\",\n      onClick: requestHandle,\n      children: \"REQUEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  };\n  const isPending = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group__buttons\",\n      children: \"PENDING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  };\n  const isMember = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"group__buttons\",\n        onClick: () => {\n          navigate(`/chats/groups/${data.id}`);\n        },\n        children: \"CHAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  const isCreator = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"group__buttons\",\n      onClick: () => {\n        navigate(`/chats/groups/${data.id}`);\n      },\n      children: \"CHAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  };\n  const isInvite = id => {\n    const handleInviteAccept = () => {\n      fetch(`http://localhost:8080/api/groups/inviteAccept/${id}`, {\n        method: \"POST\",\n        credentials: \"include\"\n      }).then(resp => {\n        if (resp.status === 202) {\n          setButtons(isMember());\n        }\n      });\n    };\n    const handleInviteDeny = () => {\n      fetch(`http://localhost:8080/api/groups/inviteDeny/${id}`, {\n        method: \"POST\",\n        credentials: \"include\"\n      }).then(resp => {\n        if (resp.status === 202) {\n          setButtons(notMember(id));\n        }\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"group__buttons\",\n        onClick: handleInviteAccept,\n        children: \"ACCEPT INVITATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"group__buttons\",\n        id: \"unconnect\",\n        onClick: handleInviteDeny,\n        children: \"DENY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  useEffect(() => {\n    ImageGet(`group/${data.id}`, setAvatar);\n    switch (data.status) {\n      case 0:\n        setButtons(notMember(data.id));\n        break;\n      case 1:\n        setButtons(isPending());\n        break;\n      case 2:\n        setButtons(isMember());\n        break;\n      case 3:\n        setButtons(isCreator());\n        break;\n      case 4:\n        setButtons(isInvite(data.id));\n        break;\n    }\n  }, [data]);\n  if (data.status == -1) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group\",\n    id: data.id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group__credentials\",\n      onClick: () => {\n        navigate(`/groups/${data.id}`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"group__avatar\",\n        src: avatar ? avatar : '/assets/group-avatar.png',\n        loading: \"lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group__name\",\n        \"data-type\": 'groups',\n        children: data.groupName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group__description\",\n      children: data.groupAbout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group__options\",\n      children: optionButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChip, \"gVSf+fwxf9YkvpdnzxZYTcieCQU=\", false, function () {\n  return [useNavigate];\n});\n_c = GroupChip;\nexport default GroupChip;\nvar _c;\n$RefreshReg$(_c, \"GroupChip\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ImageGet","Fragment","_Fragment","jsxDEV","_jsxDEV","GroupChip","data","_s","navigate","avatar","setAvatar","optionButtons","setButtons","notMember","id","requestHandle","e","fetch","method","credentials","then","resp","status","isPending","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","isMember","isCreator","isInvite","handleInviteAccept","handleInviteDeny","src","loading","groupName","groupAbout","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/components/list/components/groupChip/groupChip.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./groupChip.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ImageGet } from \"../../../../utils/ImageControl\";\n\n\nconst GroupChip = ({ data }: any): JSX.Element => {\n    const navigate = useNavigate()\n    const [avatar, setAvatar] = useState('')\n    const [optionButtons, setButtons] = useState<JSX.Element>(<></>)\n    const notMember = (id: number) => {\n        const requestHandle = (e: React.MouseEvent<HTMLButtonElement>) => {\n            fetch(`http://localhost:8080/api/groups/request/${id}`, {\n                method: \"POST\",\n                credentials: \"include\"\n            }).then((resp) => {\n                if (resp.status === 202) {\n                    setButtons(isPending())\n                }\n            })\n        }\n        return <button className=\"group__buttons\" onClick={requestHandle}>REQUEST</button>\n    }\n\n    const isPending = () => {\n        return <div className=\"group__buttons\">PENDING</div>\n    }\n\n    const isMember = () => {\n        return (\n            <>\n                <button className=\"group__buttons\" onClick={() => { navigate(`/chats/groups/${data.id}`) }} >CHAT</button>\n            </>\n        )\n    }\n\n    const isCreator = () => {\n        return <button className=\"group__buttons\" onClick={() => { navigate(`/chats/groups/${data.id}`) }}>CHAT</button>\n    }\n    const isInvite = (id: number) => {\n        const handleInviteAccept = () => {\n            fetch(`http://localhost:8080/api/groups/inviteAccept/${id}`, {\n                method: \"POST\",\n                credentials: \"include\"\n            }).then((resp) => {\n                if (resp.status === 202) {\n                    setButtons(isMember())\n                }\n            })\n        }\n        const handleInviteDeny = () => {\n            fetch(`http://localhost:8080/api/groups/inviteDeny/${id}`, {\n                method: \"POST\",\n                credentials: \"include\"\n            }).then((resp) => {\n                if (resp.status === 202) {\n                    setButtons(notMember(id))\n                }\n            })\n        }\n        return <>\n            <button className=\"group__buttons\" onClick={handleInviteAccept}>ACCEPT INVITATION</button>\n            <button className=\"group__buttons\" id=\"unconnect\" onClick={handleInviteDeny}>DENY</button>\n        </>\n    }\n    useEffect(() => {\n        ImageGet(`group/${data.id}`, setAvatar)\n        switch (data.status) {\n            case 0:\n                setButtons(notMember(data.id))\n                break\n            case 1:\n                setButtons(isPending())\n                break\n            case 2:\n                setButtons(isMember())\n                break\n            case 3:\n                setButtons(isCreator())\n                break\n            case 4:\n                setButtons(isInvite(data.id))\n                break\n        }\n    }, [data])\n\n    if (data.status == -1) return (<></>)\n\n    return (\n        <div className=\"group\" id={data.id} >\n            <div className=\"group__credentials\" onClick={() => { navigate(`/groups/${data.id}`) }}>\n                <img className=\"group__avatar\" src={avatar ? avatar : '/assets/group-avatar.png'} loading=\"lazy\" />\n                <div className=\"group__name\" data-type={'groups'}>{data.groupName}</div>\n            </div>\n            <div className=\"group__description\">{data.groupAbout}</div>\n            <div className=\"group__options\">\n                {optionButtons}\n            </div>\n        </div>\n    );\n};\n\n\n\nexport default GroupChip"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}