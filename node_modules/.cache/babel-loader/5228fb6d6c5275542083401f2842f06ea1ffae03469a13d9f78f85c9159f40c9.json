{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx\",\n  _s = $RefreshSig$();\nimport \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext } from '../../websocket/Provider'; // Adjust the path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    ready,\n    value,\n    send\n  } = useContext(WebsocketContext);\n  const [openEmoji, setEmoji] = useState(false);\n  const newMessageRef = useRef(null);\n  const [chatterAvatar, setAvatar] = useState('');\n  const [getData, getChatData] = useState([]);\n  const [sendData, setData] = useState({\n    chatId: 0,\n    content: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    chatId\n  } = useParams();\n  if (chatId === undefined) {\n    setError('Group doesn\\'t exist');\n  }\n  const chatString = chatId || '';\n  sendData.chatId = parseInt(chatString, 10);\n  useEffect(() => {\n    fetchData('chats/all', getChatData);\n  }, []);\n  const handleMessageChange = e => {\n    const {\n      value\n    } = e.target;\n    setData(prevData => ({\n      ...prevData,\n      ['content']: value\n    }));\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const event = new Event('New_Message', sendData);\n    send(event);\n  };\n  const handleClick = event => {\n    var _event$currentTarget$, _event$currentTarget$2;\n    const parent = (_event$currentTarget$ = event.currentTarget.parentElement) === null || _event$currentTarget$ === void 0 ? void 0 : (_event$currentTarget$2 = _event$currentTarget$.parentElement) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.parentElement;\n    if (parent) {\n      setEmoji(false);\n    }\n  };\n  const closeBtnEmoji = event => {\n    event.preventDefault();\n    setEmoji(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        signal: 'messages',\n        className: 'chat-feed',\n        data: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          placeholder: \"Enter your message\",\n          ref: newMessageRef,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__comment-btn--wrapper\",\n          onClick: e => {\n            handleClick(e);\n            setEmoji(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post__new-comment-img\",\n            src: \"/assets/AddSmile.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji--wrapper\",\n          children: [openEmoji && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            input: newMessageRef,\n            closeBtn: closeBtnEmoji,\n            className: 'chat__emoji-list'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__comment-btn--wrapper chat\",\n            onClick: handleSendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post__new-comment-img\",\n              src: \"/assets/Submit.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      signal: 'chats',\n      className: 'chat-list',\n      data: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"jOCbQFvutJIF2pd+nHF1TfiHVr8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["List","useNavigate","useParams","React","useState","useEffect","useRef","useContext","fetchData","EmojiPicker","WebsocketContext","jsxDEV","_jsxDEV","Chat","_s","navigate","ready","value","send","openEmoji","setEmoji","newMessageRef","chatterAvatar","setAvatar","getData","getChatData","sendData","setData","chatId","content","error","setError","undefined","chatString","parseInt","handleMessageChange","e","target","prevData","handleSendMessage","preventDefault","event","Event","handleClick","_event$currentTarget$","_event$currentTarget$2","parent","currentTarget","parentElement","closeBtnEmoji","className","children","signal","data","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","ref","onChange","onClick","src","input","closeBtn","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx"],"sourcesContent":["import \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext, WebsocketContextProps } from '../../websocket/Provider'; // Adjust the path\n\n\ninterface messageVM {\n    chatterId: number\n    chatterName: string\n    lastMessage: string\n    messageTime: string\n    type: string\n}\n\nconst Chat = () => {\n    const navigate = useNavigate()\n\n    const { ready, value, send }: WebsocketContextProps = useContext(WebsocketContext);\n\n    const [openEmoji, setEmoji] = useState(false)\n    const newMessageRef = useRef<HTMLInputElement>(null)\n    const [chatterAvatar, setAvatar] = useState('')\n    const [getData, getChatData] = useState<messageVM[]>([])\n    const [sendData, setData] = useState<{\n        chatId: number;\n        content: string\n    }>({ chatId: 0, content: '' })\n    const [error, setError] = useState('')\n    const { chatId } = useParams()\n\n    if (chatId === undefined) {\n        setError('Group doesn\\'t exist')\n    }\n    const chatString = chatId || ''\n    sendData.chatId = parseInt(chatString, 10)\n\n    useEffect(() => {\n        fetchData('chats/all', getChatData)\n    }, [])\n\n    const handleMessageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target\n\n        setData((prevData) => ({\n            ...prevData,\n            ['content']: value,\n        }))\n    }\n\n    const handleSendMessage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault()\n        const event = new Event('New_Message', sendData)\n        send(event)\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        const parent = event.currentTarget.parentElement?.parentElement?.parentElement\n        if (parent) {\n            setEmoji(false)\n        }\n    }\n    const closeBtnEmoji = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        setEmoji(false)\n    }\n    return (\n        <div className=\"chat__page\">\n            <div className=\"chat-window\">\n                <List signal={'messages'} className={'chat-feed'} data={getData} />\n                <form className=\"chat-options\">\n                    <input className=\"chat-input\" placeholder=\"Enter your message\" ref={newMessageRef} onChange={handleMessageChange} />\n                    <div className='post__comment-btn--wrapper' onClick={(e) => {\n                        handleClick(e)\n                        setEmoji(true)\n                    }}>\n                        <img className='post__new-comment-img' src='/assets/AddSmile.svg' />\n                    </div>\n                    <div className=\"emoji--wrapper\">\n                        {openEmoji && <EmojiPicker input={newMessageRef} closeBtn={closeBtnEmoji} className={'chat__emoji-list'} />}\n                        <div className='post__comment-btn--wrapper chat' onClick={handleSendMessage}>\n                            <img className='post__new-comment-img' src='/assets/Submit.svg' />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <List signal={'chats'} className={'chat-list'} data={getData} />\n        </div>\n    );\n};\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}