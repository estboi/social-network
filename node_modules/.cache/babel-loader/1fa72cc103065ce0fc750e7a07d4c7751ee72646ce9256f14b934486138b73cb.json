{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/websocket/WsContext.tsx\",\n  _s = $RefreshSig$();\n// WsContext.tsx\nimport React, { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WsContext = /*#__PURE__*/createContext(null);\nexport const WsProvider = ({\n  children,\n  url\n}) => {\n  const connection = new WebSocket(url);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WsContext.Provider, {\n      value: connection,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = WsProvider;\nexport const useWs = () => {\n  _s();\n  const connection = useContext(WsContext);\n  if (!connection) {\n    throw new Error('useWs must be used within a WsProvider');\n  }\n  return connection;\n};\n_s(useWs, \"4EvvIS7Hj946XDQc9XoaNyDXs8Y=\");\nvar _c;\n$RefreshReg$(_c, \"WsProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","WsContext","WsProvider","children","url","connection","WebSocket","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWs","_s","Error","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/websocket/WsContext.tsx"],"sourcesContent":["// WsContext.tsx\nimport React, { createContext, useContext, ReactNode } from 'react';\n\nexport const WsContext = createContext<WebSocket | null>(null);\n\ninterface WsProviderProps {\n    children: ReactNode;\n    url: string;\n}\n\nexport const WsProvider: React.FC<WsProviderProps> = ({ children, url }) => {\n    const connection = new WebSocket(url);\n\n    return (<>\n        <WsContext.Provider value={connection}>\n            {children}\n        </WsContext.Provider>\n    </>);\n};\n\nexport const useWs = () => {\n    const connection = useContext(WsContext);\n\n    if (!connection) {\n        throw new Error('useWs must be used within a WsProvider');\n    }\n\n    return connection;\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpE,OAAO,MAAMC,SAAS,gBAAGN,aAAa,CAAmB,IAAI,CAAC;AAO9D,OAAO,MAAMO,UAAqC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAI,CAAC,KAAK;EACxE,MAAMC,UAAU,GAAG,IAAIC,SAAS,CAACF,GAAG,CAAC;EAErC,oBAAQN,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACJL,OAAA,CAACG,SAAS,CAACM,QAAQ;MAACC,KAAK,EAAEH,UAAW;MAAAF,QAAA,EACjCA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC,gBACvB,CAAC;AACP,CAAC;AAACC,EAAA,GARWX,UAAqC;AAUlD,OAAO,MAAMY,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMV,UAAU,GAAGT,UAAU,CAACK,SAAS,CAAC;EAExC,IAAI,CAACI,UAAU,EAAE;IACb,MAAM,IAAIW,KAAK,CAAC,wCAAwC,CAAC;EAC7D;EAEA,OAAOX,UAAU;AACrB,CAAC;AAACU,EAAA,CARWD,KAAK;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}