{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx\",\n  _s = $RefreshSig$();\nimport \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext } from '../../websocket/Provider'; // Adjust the path\nimport { Event } from \"../../websocket/Provider\";\nimport ListPage from \"../listPage/listPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChatEvent {\n  // Adjust the type as per your payload structure\n\n  constructor(type, payload) {\n    this.type = void 0;\n    this.payload = void 0;\n    this.type = type;\n    this.payload = payload;\n  }\n}\nconst Chat = ({\n  type\n}) => {\n  _s();\n  const [openEmoji, setEmoji] = useState(false);\n  const newMessageRef = useRef(null);\n  const [getData, getChatData] = useState([]);\n  const {\n    ready,\n    value,\n    send\n  } = useContext(WebsocketContext);\n  const [sendData, setData] = useState({\n    chatId: 0,\n    content: '',\n    type: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    userId,\n    groupId\n  } = useParams();\n  let chatString = '';\n  if (type === 'group' && groupId !== undefined) {\n    chatString = groupId;\n  } else if (type === 'user' && userId !== undefined) {\n    chatString = userId;\n  } else {\n    console.log(`Chat doesn't exist: ${userId}, ${groupId}`);\n  }\n  const id = parseInt(chatString, 10);\n  const fetchDataAndSetData = async () => {\n    if (type === 'user') {\n      await fetchData(`chats/user/${id}`, getChatData);\n    } else if (type === 'group') {\n      await fetchData(`chats/group/${id}`, getChatData);\n    } else {\n      console.log('wtf bro');\n    }\n  };\n  useEffect(() => {\n    fetchDataAndSetData();\n    newMessageRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\"\n    });\n  }, []);\n  const handleMessageChange = e => {\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    setData({\n      ['chatId']: id,\n      ['content']: value,\n      ['type']: type\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (newMessageRef.current) {\n      const event = new Event('New_Message', sendData);\n      send(JSON.stringify(event));\n      fetchDataAndSetData();\n      newMessageRef.current.value = '';\n    }\n  };\n  const handleClick = event => {\n    var _event$currentTarget$, _event$currentTarget$2;\n    event.preventDefault();\n    const parent = (_event$currentTarget$ = event.currentTarget.parentElement) === null || _event$currentTarget$ === void 0 ? void 0 : (_event$currentTarget$2 = _event$currentTarget$.parentElement) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.parentElement;\n    if (parent) {\n      setEmoji(false);\n    }\n  };\n  const closeBtnEmoji = event => {\n    event.preventDefault();\n    setEmoji(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        signal: 'messages',\n        className: 'chat-feed',\n        data: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-options\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          placeholder: \"Enter your message\",\n          ref: newMessageRef,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__comment-btn--wrapper\",\n          onClick: e => {\n            handleClick(e);\n            setEmoji(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post__new-comment-img\",\n            src: \"/assets/AddSmile.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji--wrapper\",\n          children: [openEmoji && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            input: newMessageRef,\n            closeBtn: closeBtnEmoji,\n            className: 'chat__emoji-list'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__comment-btn--wrapper chat\",\n            onClick: handleSendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post__new-comment-img\",\n              src: \"/assets/Submit.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListPage, {\n      signal: ['chats', 'all']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"OsLEpXugaHCulZ4oj1mnr3mQ5uI=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["List","useParams","React","useState","useEffect","useRef","useContext","fetchData","EmojiPicker","WebsocketContext","Event","ListPage","jsxDEV","_jsxDEV","ChatEvent","constructor","type","payload","Chat","_s","openEmoji","setEmoji","newMessageRef","getData","getChatData","ready","value","send","sendData","setData","chatId","content","error","setError","userId","groupId","chatString","undefined","console","log","id","parseInt","fetchDataAndSetData","current","scrollIntoView","behavior","block","handleMessageChange","e","preventDefault","target","handleSendMessage","event","JSON","stringify","handleClick","_event$currentTarget$","_event$currentTarget$2","parent","currentTarget","parentElement","closeBtnEmoji","className","children","signal","data","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","ref","onChange","onClick","src","input","closeBtn","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx"],"sourcesContent":["import \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext, WebsocketContextProps } from '../../websocket/Provider'; // Adjust the path\nimport { Event } from \"../../websocket/Provider\";\nimport ListPage from \"../listPage/listPage\";\n\ninterface messageVM {\n    chatterId: number\n    chatterName: string\n    lastMessage: string\n    messageTime: string\n    type: string\n}\n\nclass ChatEvent {\n    type: string;\n    payload: { chatId: number; content: string }; // Adjust the type as per your payload structure\n\n    constructor(type: string, payload: { chatId: number; content: string }) {\n        this.type = type;\n        this.payload = payload;\n    }\n}\n\ninterface ChatType {\n    type: string\n}\n\nconst Chat = ({ type }: ChatType) => {\n    const [openEmoji, setEmoji] = useState(false)\n    const newMessageRef = useRef<HTMLInputElement>(null)\n    const [getData, getChatData] = useState<messageVM[]>([])\n    const { ready, value, send }: WebsocketContextProps = useContext(WebsocketContext);\n    const [sendData, setData] = useState<{\n        chatId: number;\n        content: string;\n        type: string\n    }>({ chatId: 0, content: '', type: '' })\n    const [error, setError] = useState('')\n    const { userId, groupId } = useParams()\n    let chatString: string = ''\n    if (type === 'group' && groupId !== undefined) {\n        chatString = groupId\n    } else if (type === 'user' && userId !== undefined) {\n        chatString = userId\n    } else {\n        console.log(`Chat doesn't exist: ${userId}, ${groupId}`)\n    }\n    const id = parseInt(chatString, 10)\n\n    const fetchDataAndSetData = async () => {\n        if (type === 'user') {\n            await fetchData(`chats/user/${id}`, getChatData);\n        } else if (type === 'group') {\n            await fetchData(`chats/group/${id}`, getChatData);\n        } else {\n            console.log('wtf bro');\n        }\n    };\n\n    useEffect(() => {\n        fetchDataAndSetData();\n        newMessageRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" })\n    }, [])\n\n    const handleMessageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault()\n        const { value } = e.target\n        setData({\n            ['chatId']: id,\n            ['content']: value,\n            ['type']: type,\n        })\n    }\n\n    const handleSendMessage = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.MouseEvent<HTMLDivElement> | React.FormEvent) => {\n        e.preventDefault()\n        if (newMessageRef.current) {\n            const event = new Event('New_Message', sendData)\n            send(JSON.stringify(event))\n            fetchDataAndSetData()\n            newMessageRef.current.value = '';\n        }\n\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault()\n        const parent = event.currentTarget.parentElement?.parentElement?.parentElement\n        if (parent) {\n            setEmoji(false)\n        }\n    }\n    const closeBtnEmoji = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        setEmoji(false)\n    }\n\n    return (\n        <div className=\"chat__page\">\n            <div className=\"chat-window\">\n                <List signal={'messages'} className={'chat-feed'} data={getData} />\n                <form className=\"chat-options\" onSubmit={handleSendMessage}>\n                    <input className=\"chat-input\" placeholder=\"Enter your message\" ref={newMessageRef} onChange={handleMessageChange} />\n                    <div className='post__comment-btn--wrapper' onClick={(e) => {\n                        handleClick(e)\n                        setEmoji(true)\n                    }}>\n                        <img className='post__new-comment-img' src='/assets/AddSmile.svg' />\n                    </div>\n                    <div className=\"emoji--wrapper\">\n                        {openEmoji && <EmojiPicker input={newMessageRef} closeBtn={closeBtnEmoji} className={'chat__emoji-list'} />}\n                        <div className='post__comment-btn--wrapper chat' onClick={handleSendMessage}>\n                            <img className='post__new-comment-img' src='/assets/Submit.svg' />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <ListPage signal={['chats', 'all']} />\n        </div>\n    );\n};\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}