{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/components/list/components/userChip/usersChip.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./usersChip.css\";\nimport { useEffect, useState } from \"react\";\nimport { ImageGet } from \"../../../../utils/ImageControl\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserChip = ({\n  data,\n  invited\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [FollowStatus, setFollowStatus] = useState({\n    isFollowing: data.isFollower,\n    isPending: data.isPending\n  });\n  const [avatar, setAvatar] = useState('');\n  const [groupStatus, setGroupStatus] = useState(false);\n  const [isInvited, setInvited] = useState(false);\n  const {\n    groupId\n  } = useParams();\n  useEffect(() => {\n    if (groupId && !invited) {\n      setFollowStatus({\n        isFollowing: false,\n        isPending: true\n      });\n    }\n    console.log(data);\n    ImageGet(`user/${data.id}`, setAvatar);\n  }, []);\n  const handleUnsubscribe = () => {\n    FollowFetch('unsubscribe', data.id);\n    setFollowStatus({\n      isFollowing: false,\n      isPending: false\n    });\n  };\n  const handleSubscribe = () => {\n    FollowFetch('subscribe', data.id);\n    setFollowStatus({\n      isFollowing: true,\n      isPending: false\n    });\n  };\n  const handleGroupAccept = () => {\n    const sendData = {\n      userID: data.id\n    };\n    fetch(`http://localhost:8080/api/groups/accept/${groupId}`, {\n      credentials: \"include\",\n      method: \"POST\",\n      body: JSON.stringify(sendData)\n    }).then(resp => {\n      switch (resp.status) {\n        case 202:\n          setGroupStatus(true);\n          break;\n      }\n    });\n  };\n  const handleGroupDeny = () => {\n    const sendData = {\n      userID: data.id\n    };\n    fetch(`http://localhost:8080/api/groups/deny/${groupId}`, {\n      credentials: \"include\",\n      method: \"POST\",\n      body: JSON.stringify(sendData)\n    }).then(resp => {\n      switch (resp.status) {\n        case 202:\n          setGroupStatus(true);\n          break;\n      }\n    });\n  };\n  const handleInvite = () => {\n    const sendData = {\n      userID: data.id\n    };\n    fetch(`http://localhost:8080/api/groups/invite/${groupId}`, {\n      credentials: \"include\",\n      method: \"POST\",\n      body: JSON.stringify(sendData)\n    }).then(resp => {\n      switch (resp.status) {\n        case 202:\n          setInvited(true);\n          break;\n      }\n    });\n  };\n  if (groupStatus) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-list__user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list__user-header\",\n      onClick: () => {\n        navigate(`/users/${data.id}`, {\n          state: {\n            targetId: data.id\n          }\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"users-list__user-avatar\",\n        src: avatar ? avatar : '/assets/default_avatar.png',\n        loading: \"lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list__user-name\",\n        \"data-type\": 'users',\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list__options\",\n      children: invited != '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isInvited || FollowStatus.isPending ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list__button\",\n          children: \"PENDING...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"users-list__button\",\n          onClick: handleInvite,\n          children: \"INVITE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 30\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: FollowStatus.isFollowing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"users-list__button\",\n            onClick: () => {\n              navigate(`/chats/users/${data.id}`);\n            },\n            children: \"CHAT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"users-list__button\",\n            id: \"unsub\",\n            onClick: handleUnsubscribe,\n            children: \"UNSUBSCRIBE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : FollowStatus.isPending ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"users-list__button\",\n            onClick: groupId ? handleGroupAccept : handleSubscribe,\n            children: \"ACCEPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"users-list__button\",\n            id: \"unsub\",\n            onClick: groupId ? handleGroupDeny : handleUnsubscribe,\n            children: \"DECLINE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"users-list__button\",\n          onClick: handleSubscribe,\n          children: \"SUBSCRIBE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(UserChip, \"0AaCFlPy9ODHdIRcAPLW69f0/mM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UserChip;\nconst FollowFetch = async (signal, id) => {\n  try {\n    await fetch(`http://localhost:8080/api/users/${signal}/${id}`, {\n      method: 'POST',\n      credentials: \"include\"\n    });\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\n_c2 = FollowFetch;\nexport default UserChip;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserChip\");\n$RefreshReg$(_c2, \"FollowFetch\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","useState","ImageGet","Fragment","_Fragment","jsxDEV","_jsxDEV","UserChip","data","invited","_s","navigate","FollowStatus","setFollowStatus","isFollowing","isFollower","isPending","avatar","setAvatar","groupStatus","setGroupStatus","isInvited","setInvited","groupId","console","log","id","handleUnsubscribe","FollowFetch","handleSubscribe","handleGroupAccept","sendData","userID","fetch","credentials","method","body","JSON","stringify","then","resp","status","handleGroupDeny","handleInvite","className","children","onClick","state","targetId","src","loading","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","signal","error","_c2","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/components/list/components/userChip/usersChip.tsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport \"./usersChip.css\";\nimport { useEffect, useState } from \"react\";\nimport { ImageGet } from \"../../../../utils/ImageControl\";\n\nconst UserChip = ({ data, invited }: any): JSX.Element => {\n    const navigate = useNavigate()\n    const [FollowStatus, setFollowStatus] = useState({ isFollowing: data.isFollower, isPending: data.isPending })\n    const [avatar, setAvatar] = useState('')\n    const [groupStatus, setGroupStatus] = useState(false)\n    const [isInvited, setInvited] = useState(false)\n\n    const { groupId } = useParams()\n    useEffect(() => {\n        if (groupId && !invited) {\n            setFollowStatus({ isFollowing: false, isPending: true })\n        }\n        console.log(data)\n        ImageGet(`user/${data.id}`, setAvatar)\n    }, [])\n\n    const handleUnsubscribe = () => {\n        FollowFetch('unsubscribe', data.id)\n        setFollowStatus({ isFollowing: false, isPending: false });\n    }\n\n    const handleSubscribe = () => {\n        FollowFetch('subscribe', data.id)\n        setFollowStatus({ isFollowing: true, isPending: false });\n    }\n\n    const handleGroupAccept = () => {\n        const sendData = { userID: data.id }\n        fetch(`http://localhost:8080/api/groups/accept/${groupId}`, {\n            credentials: \"include\",\n            method: \"POST\",\n            body: JSON.stringify(sendData)\n        }).then((resp) => {\n            switch (resp.status) {\n                case 202:\n                    setGroupStatus(true)\n                    break\n            }\n        })\n    }\n    const handleGroupDeny = () => {\n        const sendData = { userID: data.id }\n        fetch(`http://localhost:8080/api/groups/deny/${groupId}`, {\n            credentials: \"include\",\n            method: \"POST\",\n            body: JSON.stringify(sendData)\n        }).then((resp) => {\n            switch (resp.status) {\n                case 202:\n                    setGroupStatus(true)\n                    break\n            }\n        })\n    }\n\n    const handleInvite = () => {\n        const sendData = { userID: data.id }\n        fetch(`http://localhost:8080/api/groups/invite/${groupId}`, {\n            credentials: \"include\",\n            method: \"POST\",\n            body: JSON.stringify(sendData)\n        }).then((resp) => {\n            switch (resp.status) {\n                case 202:\n                    setInvited(true)\n                    break\n            }\n        })\n    }\n\n    if (groupStatus) {\n        return <></>\n    }\n\n    return (\n        <div className=\"users-list__user\">\n            <div className=\"users-list__user-header\" onClick={() => {\n                navigate(`/users/${data.id}`, { state: { targetId: data.id } })\n            }}>\n                <img className=\"users-list__user-avatar\" src={avatar ? avatar : '/assets/default_avatar.png'} loading=\"lazy\" />\n                <div className=\"users-list__user-name\" data-type={'users'}>{data.name}</div>\n            </div>\n            <div className=\"users-list__options\">\n                {invited != '' ?\n                    (<>\n                        {isInvited || FollowStatus.isPending ?\n                            (<div className=\"users-list__button\">PENDING...</div>)\n                            :\n                            (<button className=\"users-list__button\" onClick={handleInvite} >INVITE</button>)\n                        }\n                    </>)\n                    :\n                    (<>\n                        {FollowStatus.isFollowing ? (\n                            <>\n                                <button className=\"users-list__button\" onClick={() => { navigate(`/chats/users/${data.id}`) }}>CHAT</button>\n                                <button className=\"users-list__button\"\n                                    id=\"unsub\"\n                                    onClick={handleUnsubscribe}>UNSUBSCRIBE</button>\n                            </>\n                        ) : (\n                            FollowStatus.isPending ? (\n                                <>\n                                    <button className=\"users-list__button\" onClick={groupId ? handleGroupAccept : handleSubscribe}>ACCEPT</button>\n                                    <button className=\"users-list__button\" id=\"unsub\" onClick={groupId ? handleGroupDeny : handleUnsubscribe}>DECLINE</button>\n                                </>\n                            ) : (\n                                <button className=\"users-list__button\"\n                                    onClick={handleSubscribe}>SUBSCRIBE</button>\n                            )\n                        )}\n                    </>)}\n            </div>\n        </div>\n    );\n};\n\nconst FollowFetch = async (signal: string, id: number) => {\n    try {\n        await fetch(`http://localhost:8080/api/users/${signal}/${id}`, {\n            method: 'POST',\n            credentials: \"include\"\n        })\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    }\n}\n\nexport default UserChip"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}