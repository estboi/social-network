{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx\",\n  _s = $RefreshSig$();\nimport \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { sendEvent } from \"../../api/wsRouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  type\n}) => {\n  _s();\n  const [openEmoji, setEmoji] = useState(false);\n  const newMessageRef = useRef(null);\n  const [chatterAvatar, setAvatar] = useState('');\n  const [getData, getChatData] = useState([]);\n  const [sendData, setData] = useState({\n    chatId: 0,\n    content: '',\n    type: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    userId,\n    groupId\n  } = useParams();\n  let chatString = '';\n  if (type === 'group' && groupId !== undefined) {\n    chatString = groupId;\n  } else if (type === 'user' && userId !== undefined) {\n    chatString = userId;\n  } else {\n    console.log(`Chat doesn't exist: ${userId}, ${groupId}`);\n  }\n  const id = parseInt(chatString, 10);\n  useEffect(() => {\n    if (type === 'user') {\n      fetchData(`chats/user/${id}`, getChatData);\n    } else if (type === 'group') {\n      fetchData(`chats/group/${id}`, getChatData);\n    } else {\n      console.log('wtf bro');\n    }\n    const socket = new WebSocket(\"ws://localhost:8080/ws\");\n    socket.onopen = () => {\n      console.log('OPEN SOCKET');\n    };\n    socket.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if ((data === null || data === void 0 ? void 0 : data.type) === \"New_Message\" && (data === null || data === void 0 ? void 0 : data.payload) !== \"0\") {\n        fetchData(`chats/${type}/${id}`, setData);\n      }\n    };\n    connection.current = socket;\n    return () => {\n      var _connection$current;\n      return (_connection$current = connection.current) === null || _connection$current === void 0 ? void 0 : _connection$current.close();\n    };\n  }, []);\n  const handleMessageChange = e => {\n    const {\n      value\n    } = e.target;\n    setData({\n      ['chatId']: id,\n      ['content']: value,\n      ['type']: type\n    });\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    console.log(sendData);\n    sendEvent('New_Message', sendData);\n  };\n  const handleClick = event => {\n    var _event$currentTarget$, _event$currentTarget$2;\n    const parent = (_event$currentTarget$ = event.currentTarget.parentElement) === null || _event$currentTarget$ === void 0 ? void 0 : (_event$currentTarget$2 = _event$currentTarget$.parentElement) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.parentElement;\n    if (parent) {\n      setEmoji(false);\n    }\n  };\n  const closeBtnEmoji = event => {\n    event.preventDefault();\n    setEmoji(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        signal: 'messages',\n        className: 'chat-feed',\n        data: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          placeholder: \"Enter your message\",\n          ref: newMessageRef,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__comment-btn--wrapper\",\n          onClick: e => {\n            handleClick(e);\n            setEmoji(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post__new-comment-img\",\n            src: \"/assets/AddSmile.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji--wrapper\",\n          children: [openEmoji && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            input: newMessageRef,\n            closeBtn: closeBtnEmoji,\n            className: 'chat__emoji-list'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__comment-btn--wrapper chat\",\n            onClick: handleSendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post__new-comment-img\",\n              src: \"/assets/Submit.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      signal: 'chats',\n      className: 'chat-list',\n      data: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"lS4WyYsv5J9gnxRRbOIUYP3ZbwA=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["List","useParams","React","useState","useEffect","useRef","fetchData","EmojiPicker","sendEvent","jsxDEV","_jsxDEV","Chat","type","_s","openEmoji","setEmoji","newMessageRef","chatterAvatar","setAvatar","getData","getChatData","sendData","setData","chatId","content","error","setError","userId","groupId","chatString","undefined","console","log","id","parseInt","socket","WebSocket","onopen","onmessage","e","data","JSON","parse","payload","connection","current","_connection$current","close","handleMessageChange","value","target","handleSendMessage","preventDefault","handleClick","event","_event$currentTarget$","_event$currentTarget$2","parent","currentTarget","parentElement","closeBtnEmoji","className","children","signal","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","ref","onChange","onClick","src","input","closeBtn","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx"],"sourcesContent":["import \"./chatPage.css\";\nimport List from \"../../components/list/list\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { sendEvent } from \"../../api/wsRouter\";\n\ninterface messageVM {\n    chatterId: number\n    chatterName: string\n    lastMessage: string\n    messageTime: string\n    type: string\n}\n\ninterface ChatType {\n    type: string\n}\n\nconst Chat = ({ type }: ChatType) => {\n    const [openEmoji, setEmoji] = useState(false)\n    const newMessageRef = useRef<HTMLInputElement>(null)\n    const [chatterAvatar, setAvatar] = useState('')\n    const [getData, getChatData] = useState<messageVM[]>([])\n    const [sendData, setData] = useState<{\n        chatId: number;\n        content: string;\n        type: string\n    }>({ chatId: 0, content: '', type: '' })\n    const [error, setError] = useState('')\n    const { userId, groupId } = useParams()\n    let chatString: string = ''\n    if (type === 'group' && groupId !== undefined) {\n        chatString = groupId\n    } else if (type === 'user' && userId !== undefined) {\n        chatString = userId\n    } else {\n        console.log(`Chat doesn't exist: ${userId}, ${groupId}`)\n    }\n    const id = parseInt(chatString, 10)\n\n    useEffect(() => {\n        if (type === 'user') {\n            fetchData(`chats/user/${id}`, getChatData)\n        } else if (type === 'group') {\n            fetchData(`chats/group/${id}`, getChatData)\n        } else {\n            console.log('wtf bro')\n        }\n\n        const socket = new WebSocket(\"ws://localhost:8080/ws\")\n        socket.onopen = () => {\n            console.log('OPEN SOCKET')\n        }\n        socket.onmessage = (e) => {\n            const data = JSON.parse(e.data)\n            if (data?.type === \"New_Message\" && data?.payload !== \"0\") {\n                fetchData(`chats/${type}/${id}`, setData)\n            }\n        }\n        connection.current = socket\n        return () => connection.current?.close()\n\n    }, [])\n\n    const handleMessageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target\n        setData({\n            ['chatId']: id,\n            ['content']: value,\n            ['type']: type,\n        })\n    }\n\n    const handleSendMessage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.MouseEvent<HTMLDivElement>) => {\n        e.preventDefault()\n        console.log(sendData)\n        sendEvent('New_Message', sendData)\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        const parent = event.currentTarget.parentElement?.parentElement?.parentElement\n        if (parent) {\n            setEmoji(false)\n        }\n    }\n    const closeBtnEmoji = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        setEmoji(false)\n    }\n    return (\n        <div className=\"chat__page\">\n            <div className=\"chat-window\">\n                <List signal={'messages'} className={'chat-feed'} data={getData} />\n                <form className=\"chat-options\">\n                    <input className=\"chat-input\" placeholder=\"Enter your message\" ref={newMessageRef} onChange={handleMessageChange} />\n                    <div className='post__comment-btn--wrapper' onClick={(e) => {\n                        handleClick(e)\n                        setEmoji(true)\n                    }}>\n                        <img className='post__new-comment-img' src='/assets/AddSmile.svg' />\n                    </div>\n                    <div className=\"emoji--wrapper\">\n                        {openEmoji && <EmojiPicker input={newMessageRef} closeBtn={closeBtnEmoji} className={'chat__emoji-list'} />}\n                        <div className='post__comment-btn--wrapper chat' onClick={handleSendMessage}>\n                            <img className='post__new-comment-img' src='/assets/Submit.svg' />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <List signal={'chats'} className={'chat-list'} data={getData} />\n        </div>\n    );\n};\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}