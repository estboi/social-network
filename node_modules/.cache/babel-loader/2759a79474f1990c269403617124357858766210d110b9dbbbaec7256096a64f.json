{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx\",\n  _s = $RefreshSig$();\nimport \"./chatPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext } from '../../websocket/Provider'; // Adjust the path\nimport { Event } from \"../../websocket/Provider\";\nimport ListPage from \"../listPage/listPage\";\nimport Message from \"../../components/list/components/messageChip/messageChip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  type\n}) => {\n  _s();\n  const [openEmoji, setEmoji] = useState(false);\n  const newMessageRef = useRef(null);\n  const [getData, getChatData] = useState([]);\n  const {\n    ready,\n    value,\n    send\n  } = useContext(WebsocketContext);\n  const [sendData, setData] = useState({\n    chatId: 0,\n    content: '',\n    type: ''\n  });\n  const [error, setError] = useState('');\n  const {\n    userId,\n    groupId\n  } = useParams();\n  let chatString = '';\n  if (type === 'group' && groupId !== undefined) {\n    chatString = groupId;\n  } else if (type === 'user' && userId !== undefined) {\n    chatString = userId;\n  } else {\n    console.log(`Chat doesn't exist: ${userId}, ${groupId}`);\n  }\n  const id = parseInt(chatString, 10);\n  const [myUser, setMyUser] = useState({\n    username: '',\n    userID: 0\n  });\n  const fetchDataAndSetData = async () => {\n    if (type === 'user') {\n      await fetchData(`chats/user/${id}`, getChatData);\n    } else if (type === 'group') {\n      await fetchData(`chats/group/${id}`, getChatData);\n    } else {\n      console.log('wtf bro');\n    }\n    await fetchData('navbar', setMyUser);\n  };\n  useEffect(() => {\n    fetchDataAndSetData();\n  }, [value]);\n  const handleMessageChange = e => {\n    var _newMessageRef$curren;\n    e.preventDefault();\n    const {\n      value\n    } = e.target;\n    const emojiText = ((_newMessageRef$curren = newMessageRef.current) === null || _newMessageRef$curren === void 0 ? void 0 : _newMessageRef$curren.value) || '';\n    sendData.chatId = id;\n    sendData.content = emojiText;\n    sendData.type = type;\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    console.log(sendData);\n    if (newMessageRef.current && sendData.content.trim() !== '') {\n      const event = new Event('New_Message', sendData);\n      send(JSON.stringify(event));\n      fetchDataAndSetData(); // Move this line if you want to fetch data after sending a message\n      newMessageRef.current.value = '';\n    }\n  };\n  const handleClick = event => {\n    var _event$currentTarget$, _event$currentTarget$2;\n    event.preventDefault();\n    const parent = (_event$currentTarget$ = event.currentTarget.parentElement) === null || _event$currentTarget$ === void 0 ? void 0 : (_event$currentTarget$2 = _event$currentTarget$.parentElement) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.parentElement;\n    if (parent) {\n      setEmoji(false);\n    }\n  };\n  const closeBtnEmoji = event => {\n    event.preventDefault();\n    setEmoji(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-feed\",\n        children: getData.map((dataset, key) => /*#__PURE__*/_jsxDEV(Message, {\n          data: dataset,\n          myUser: myUser.userID,\n          chatType: dataset.type\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-options\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat-input\",\n          placeholder: \"Enter your message\",\n          ref: newMessageRef,\n          onChange: handleMessageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__comment-btn--wrapper\",\n          onClick: e => {\n            handleClick(e);\n            setEmoji(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post__new-comment-img\",\n            src: \"/assets/AddSmile.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji--wrapper\",\n          children: [openEmoji && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            input: newMessageRef,\n            closeBtn: closeBtnEmoji,\n            className: 'chat__emoji-list'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__comment-btn--wrapper chat\",\n            onClick: handleSendMessage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post__new-comment-img\",\n              src: \"/assets/Submit.svg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListPage, {\n      signal: ['chats', 'all']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"j+0sBJB+0TtjH0TZzIeGdMZAoUg=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useParams","React","useState","useEffect","useRef","useContext","fetchData","EmojiPicker","WebsocketContext","Event","ListPage","Message","jsxDEV","_jsxDEV","Chat","type","_s","openEmoji","setEmoji","newMessageRef","getData","getChatData","ready","value","send","sendData","setData","chatId","content","error","setError","userId","groupId","chatString","undefined","console","log","id","parseInt","myUser","setMyUser","username","userID","fetchDataAndSetData","handleMessageChange","e","_newMessageRef$curren","preventDefault","target","emojiText","current","handleSendMessage","trim","event","JSON","stringify","handleClick","_event$currentTarget$","_event$currentTarget$2","parent","currentTarget","parentElement","closeBtnEmoji","className","children","map","dataset","key","data","chatType","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","ref","onChange","onClick","src","input","closeBtn","signal","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/chatPage/chatPage.tsx"],"sourcesContent":["import \"./chatPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport fetchData from \"../../utils/fetchData\";\nimport EmojiPicker from \"../../utils/emojiFuncs\";\nimport { WebsocketContext, WebsocketContextProps } from '../../websocket/Provider'; // Adjust the path\nimport { Event } from \"../../websocket/Provider\";\nimport ListPage from \"../listPage/listPage\";\nimport Message from \"../../components/list/components/messageChip/messageChip\";\n\ninterface messageVM {\n    chatterId: number\n    chatterName: string\n    lastMessage: string\n    messageTime: string\n    type: string\n}\n\ninterface ChatType {\n    type: string\n}\n\nconst Chat = ({ type }: ChatType) => {\n    const [openEmoji, setEmoji] = useState(false)\n    const newMessageRef = useRef<HTMLInputElement>(null)\n    const [getData, getChatData] = useState<messageVM[]>([])\n    const { ready, value, send }: WebsocketContextProps = useContext(WebsocketContext);\n    const [sendData, setData] = useState<{\n        chatId: number;\n        content: string;\n        type: string\n    }>({ chatId: 0, content: '', type: '' })\n    const [error, setError] = useState('')\n    const { userId, groupId } = useParams()\n    let chatString: string = ''\n    if (type === 'group' && groupId !== undefined) {\n        chatString = groupId\n    } else if (type === 'user' && userId !== undefined) {\n        chatString = userId\n    } else {\n        console.log(`Chat doesn't exist: ${userId}, ${groupId}`)\n    }\n    const id = parseInt(chatString, 10)\n\n    const [myUser, setMyUser] = useState<{ username: string, userID: number }>({ username: '', userID: 0 })\n    const fetchDataAndSetData = async () => {\n        if (type === 'user') {\n            await fetchData(`chats/user/${id}`, getChatData);\n        } else if (type === 'group') {\n            await fetchData(`chats/group/${id}`, getChatData);\n        } else {\n            console.log('wtf bro');\n        }\n        await fetchData('navbar', setMyUser)\n    };\n\n    useEffect(() => {\n        fetchDataAndSetData();\n    }, [value])\n\n    const handleMessageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        const { value } = e.target;\n\n        const emojiText = newMessageRef.current?.value || '';\n        sendData.chatId = id\n        sendData.content = emojiText\n        sendData.type = type\n    };\n\n    const handleSendMessage = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.MouseEvent<HTMLDivElement> | React.FormEvent) => {\n        e.preventDefault();\n        console.log(sendData)\n        if (newMessageRef.current && sendData.content.trim() !== '') {\n            const event = new Event('New_Message', sendData);\n            send(JSON.stringify(event));\n            fetchDataAndSetData(); // Move this line if you want to fetch data after sending a message\n            newMessageRef.current.value = '';\n        }\n    };\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault()\n        const parent = event.currentTarget.parentElement?.parentElement?.parentElement\n        if (parent) {\n            setEmoji(false)\n        }\n    }\n    const closeBtnEmoji = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault()\n        setEmoji(false)\n    }\n\n    return (\n        <div className=\"chat__page\">\n            <div className=\"chat-window\">\n                <div className='chat-feed'>\n                    {getData.map((dataset: any, key: any) => (\n                        <Message key={key} data={dataset} myUser={myUser.userID} chatType={dataset.type} />\n                    ))}\n                </div>\n                <form className=\"chat-options\" onSubmit={handleSendMessage}>\n                    <input className=\"chat-input\" placeholder=\"Enter your message\" ref={newMessageRef} onChange={handleMessageChange} />\n                    <div className='post__comment-btn--wrapper' onClick={(e) => {\n                        handleClick(e)\n                        setEmoji(true)\n                    }}>\n                        <img className='post__new-comment-img' src='/assets/AddSmile.svg' />\n                    </div>\n                    <div className=\"emoji--wrapper\">\n                        {openEmoji && <EmojiPicker input={newMessageRef} closeBtn={closeBtnEmoji} className={'chat__emoji-list'} />}\n                        <div className='post__comment-btn--wrapper chat' onClick={handleSendMessage}>\n                            <img className='post__new-comment-img' src='/assets/Submit.svg' />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <ListPage signal={['chats', 'all']} />\n        </div>\n    );\n};\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}