{"ast":null,"code":"var _jsxFileName = \"/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateGroup/CreateGroup.tsx\",\n  _s = $RefreshSig$();\nimport { HandleImageSend } from \"../../utils/ImageControl\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport './CreateGroup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateGroup() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const imageRef = useRef(null);\n  const [imageUrl, setUrl] = useState('');\n  const [groupData, setGroupData] = useState({\n    title: '',\n    description: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    if (type === 'file') {\n      var _e$target$files;\n      const file = HandleImageSend((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]);\n      if (typeof file === 'string') {\n        setError(file);\n        return;\n      }\n      setUrl(URL.createObjectURL(file));\n      setGroupData(prevData => ({\n        ...prevData,\n        avatar: file\n      }));\n    } else {\n      setGroupData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    if (groupData.title === '') {\n      setError('Please enter group name');\n      return;\n    } else if (groupData.description === '') {\n      setError('Please enter group description');\n      return;\n    }\n    const {\n      avatar,\n      ...formDataWithoutAvatar\n    } = groupData;\n    await fetch('http://localhost:8080/api/groups/create', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formDataWithoutAvatar)\n    }).then(async response => {\n      if (!response.ok) {\n        const message = await response.text();\n        setError(message);\n        return;\n      }\n      if (avatar) {\n        const data = new FormData(); //FormData is for avatar to send this as File \n        data.append('content', avatar);\n        await fetch('http://localhost:8080/api/image/group', {\n          method: \"POST\",\n          body: data\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-group-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"event-title\",\n        placeholder: \"Title\",\n        name: \"title\",\n        value: groupData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-description-avatar\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"content-text-area\",\n          placeholder: \"description\",\n          name: \"description\",\n          value: groupData.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-image\",\n          onDrop: handleChange,\n          onClick: () => {\n            var _imageRef$current;\n            (_imageRef$current = imageRef.current) === null || _imageRef$current === void 0 ? void 0 : _imageRef$current.click();\n          },\n          children: [groupData.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post-img\",\n            alt: \"\",\n            src: imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drop image or click here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"post-image-input\",\n            onDrop: handleChange,\n            onChange: handleChange,\n            ref: imageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleSubmit,\n        children: \"CREATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CreateGroup, \"xDe2U7etQRyStH3ClgPBHimmXPs=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateGroup;\nexport default CreateGroup;\nvar _c;\n$RefreshReg$(_c, \"CreateGroup\");","map":{"version":3,"names":["HandleImageSend","useNavigate","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGroup","_s","navigate","error","setError","imageRef","imageUrl","setUrl","groupData","setGroupData","title","description","handleChange","e","name","value","type","target","_e$target$files","file","files","URL","createObjectURL","prevData","avatar","handleSubmit","formDataWithoutAvatar","fetch","method","headers","body","JSON","stringify","then","response","ok","message","text","data","FormData","append","children","className","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onClick","_imageRef$current","current","click","alt","src","ref","_c","$RefreshReg$"],"sources":["/Users/alekspavlov/Desktop/Kood-Johvi/social-network/src/Pages/CreateGroup/CreateGroup.tsx"],"sourcesContent":["import Navbar from \"../../components/navbar/navbar\"\nimport Header from \"../../components/header/header\"\nimport { HandleImageSend } from \"../../utils/ImageControl\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useState, useRef } from \"react\"\nimport './CreateGroup.css'\n\nfunction CreateGroup() {\n    const navigate = useNavigate()\n\n    const [error, setError] = useState('')\n    const imageRef = useRef<HTMLInputElement | null>(null)\n    const [imageUrl, setUrl] = useState('')\n    const [groupData, setGroupData] = useState<{\n        title: string;\n        description: string;\n        avatar?: File;\n    }>({\n        title: '',\n        description: ''\n    })\n\n    const handleChange = (e: any) => {\n        const { name, value, type } = e.target\n\n        if (type === 'file') {\n            const file = HandleImageSend(e.target.files?.[0])\n            if (typeof file === 'string') {\n                setError(file)\n                return\n            }\n            setUrl(URL.createObjectURL(file))\n            setGroupData((prevData) => ({\n                ...prevData,\n                avatar: file,\n            }))\n        } else {\n            setGroupData((prevData) => ({\n                ...prevData,\n                [name]: value,\n            }))\n        }\n    }\n\n    const handleSubmit = async (e: any) => {\n        if (groupData.title === '') {\n            setError('Please enter group name')\n            return\n        } else if (groupData.description === '') {\n            setError('Please enter group description')\n            return\n        }\n        const { avatar, ...formDataWithoutAvatar } = groupData\n        await fetch('http://localhost:8080/api/groups/create', {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(formDataWithoutAvatar)\n        }).then(async (response) => {\n            if (!response.ok) {\n                const message = await response.text()\n                setError(message)\n                return\n            }\n            if (avatar) {\n                const data = new FormData() //FormData is for avatar to send this as File \n                data.append('content', avatar)\n                await fetch('http://localhost:8080/api/image/group', {\n                    method: \"POST\",\n                    body: data\n                })\n            }\n        })\n    }\n\n    return (\n        <>\n            {/* <Header className=\"create-event-header\">\n                <button className=\"back-button\" onClick={() => { navigate('/groups') }}>&lt; BACK</button>\n            </Header> */}\n            <div className=\"create-group-main\">\n                <textarea\n                    className=\"event-title\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    value={groupData.title}\n                    onChange={handleChange} />\n                <div className=\"group-description-avatar\">\n                    <textarea\n                        className=\"content-text-area\"\n                        placeholder=\"description\"\n                        name=\"description\"\n                        value={groupData.description}\n                        onChange={handleChange} />\n                    <div\n                        className=\"add-image\"\n                        onDrop={handleChange}\n                        onClick={() => { imageRef.current?.click() }}>\n                        {groupData.avatar ?\n                            <img className=\"post-img\" alt=\"\" src={imageUrl} /> : <p>Drop image or click here</p>\n                        }\n                        <input\n                            type=\"file\"\n                            className=\"post-image-input\"\n                            onDrop={handleChange}\n                            onChange={handleChange}\n                            ref={imageRef}\n                        />\n\n                    </div>\n                </div>\n                <button className=\"back-button\" onClick={handleSubmit}>CREATE</button>\n            </div>\n        </>\n    )\n}\n\nexport default CreateGroup"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}